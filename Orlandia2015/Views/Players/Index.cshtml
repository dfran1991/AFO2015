@using System.Data.Entity.Core.Metadata.Edm
@using PagedList.Mvc
@model PagedList.IPagedList<Orlandia2015.Models.Player>

@{
    ViewBag.Title = "Index";
}

<h2>Players</h2>

<div class="row row-form-inline">
    <div class="col-md-10">
        @using (Html.BeginForm("Index", "Players", FormMethod.Get, new { @class = "form-inline" }))
        {
            @Html.AntiForgeryToken()
            <div class="form-group">
                <label for="txtPlayerName">Player Name:</label>
                @Html.TextBox("SearchString", (string)ViewBag.CurrentFilter, new { @class="form-control", placeholder="John Doe" })
            </div>
            <button type="submit" class="btn btn-primary">Find Player</button>
        }
    </div>
    <div class="col-md-2">
        @Html.ActionLink("Add Player", "Create", "Players", new { @class = "btn btn-success pull-right" })
    </div>
</div>

<div class="row"> 
    <div class="col-md-12">
        <div class="table-responsive">

            <table class="table table-hover">
                <thead>
                <tr>
                    <th>
                        @Html.ActionLink("Player Name", "Index", new { sortOrder = ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter })
                    </th>
                    <th>
                        @Html.ActionLink("Faction Name", "Index", new { sortOrder = ViewBag.FactionSortParm, currentFilter = ViewBag.CurrentFilter })
                    </th>
                    <th>
                        @Html.ActionLink("Rank", "Index", new { sortOrder = ViewBag.RankSortParm, currentFilter = ViewBag.CurrentFilter })
                    </th>
                    <th>
                        @Html.ActionLink("Points", "Index", new { sortOrder = ViewBag.PointsSortParm, currentFilter = ViewBag.CurrentFilter })
                    </th>
                    <th></th>
                </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr onclick="document.location = '@Url.Action("Details", new { id = item.uPlayerID })'">
                            <td>
                                @Html.DisplayFor(modelItem => item.sName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Faction.sName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Rank.sRankName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.iPoints)
                            </td>
                            <td>
                                <a href="@Url.Action("Edit", new {id = item.uPlayerID})" title="Edit" class="btn btn-primary btn-xs">
                                    <i class="glyphicon glyphicon-pencil"></i>
                                    <span class="sr-only">Edit</span>
                                </a>
                                
                                <a href="@Url.Action("Details", new {id = item.uPlayerID})" title="Details" class="btn btn-success btn-xs">
                                    <i class="glyphicon glyphicon-list-alt"></i>
                                    <span class="sr-only">Details</span>
                                </a>
                                
                                <a href="@Url.Action("Delete", new {id = item.uPlayerID})" title="Delete" class="btn btn-danger btn-xs">
                                    <i class="glyphicon glyphicon-trash"></i>
                                    <span class="sr-only">Delete</span>
                                </a>
                                
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
            <br />
            Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

            @Html.PagedListPager(Model, page => Url.Action("Index", new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
        </div>
    </div>
</div>
